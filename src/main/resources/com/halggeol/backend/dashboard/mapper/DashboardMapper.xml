<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.halggeol.backend.dashboard.mapper.DashboardMapper">
  <select id="getAvgRegretScoreByUserId" resultType="java.lang.Double">
    SELECT
      AVG(regret_score_union.score)
    FROM (
           SELECT product1_regret_score AS score
           FROM rec_item
           WHERE user_id = #{userId} AND product1_regret_score IS NOT NULL

           UNION ALL

           SELECT product2_regret_score AS score
           FROM rec_item
           WHERE user_id = #{userId} AND product2_regret_score IS NOT NULL

           UNION ALL

           SELECT product3_regret_score AS score
           FROM rec_item
           WHERE user_id = #{userId} AND product3_regret_score IS NOT NULL

           UNION ALL

           SELECT product4_regret_score AS score
           FROM rec_item
           WHERE user_id = #{userId} AND product4_regret_score IS NOT NULL

           UNION ALL

           SELECT product5_regret_score AS score
           FROM rec_item
           WHERE user_id = #{userId} AND product5_regret_score IS NOT NULL
         ) AS regret_score_union;
    </select>

  <select id="getAssetsOneYearByUserId" resultType="com.halggeol.backend.dashboard.dto.DashboardAssetResponseDTO">
    SELECT
      collect_date AS date,
      asset
    FROM mydata
    WHERE user_id = #{userId}
    AND collect_date <![CDATA[ >= ]]> DATE_SUB(CURDATE(), INTERVAL 1 YEAR)
    AND collect_date <![CDATA[ <= ]]> CURDATE()
    ORDER BY collect_date ASC;
  </select>
  <select id="getPortfolioByUserId" resultType="com.halggeol.backend.dashboard.dto.DashboardPortfolioResponseDTO">
    SELECT
      CASE
        WHEN mp.product_id LIKE 'D%' THEN 'deposit'
        WHEN mp.product_id LIKE 'S%' THEN 'savings'
        WHEN mp.product_id LIKE 'A%' OR mp.product_id LIKE 'C%' THEN 'pension'
        WHEN mp.product_id LIKE 'F%' THEN 'fund'
        WHEN mp.product_id LIKE 'X%' THEN 'forex'
        ELSE 'unknown'
        END AS type,
      CAST(
        SUM(mp.amount) * 1.0 / (
          SELECT SUM(mp2.amount)
          FROM myproduct mp2
          WHERE mp2.mydata_id = (
            SELECT id
            FROM mydata
            WHERE user_id = #{userId}
            ORDER BY collect_date DESC, id DESC
        LIMIT 1
        )
    ) AS CHAR
  ) AS ratio
    FROM myproduct mp
    WHERE mp.mydata_id = (
      SELECT id
      FROM mydata
      WHERE user_id = #{userId}
      ORDER BY collect_date DESC, id DESC
      LIMIT 1
      )
    GROUP BY type
    ORDER BY type ASC;
    </select>

  <select id="getFeedbackRatioByUserId" resultType="java.lang.Double">
    SELECT
      CASE
        WHEN total_products = 0 THEN 0.0
        ELSE CAST(feedback_products AS DECIMAL(10,2)) / total_products
        END AS feedback_ratio
    FROM (
           SELECT
             SUM(
               (product1_status = '회고') +
               (product2_status = '회고') +
               (product3_status = '회고') +
               (product4_status = '회고') +
               (product5_status = '회고')
             ) AS feedback_products,
             SUM(
               (product1_status IS NOT NULL) +
               (product2_status IS NOT NULL) +
               (product3_status IS NOT NULL) +
               (product4_status IS NOT NULL) +
               (product5_status IS NOT NULL)
             ) AS total_products
           FROM rec_item
           WHERE user_id = #{userId}
         ) AS feedback_stats;
  </select>
</mapper>