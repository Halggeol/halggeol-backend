plugins {
    id 'java'
    id 'war'
}

group 'com.halggeol'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.11.0'
    springSecurityVersion = '6.4.4'
    jjwtVersion = '0.11.5'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.servlet:jakarta.servlet-api:6.1.0')
// 스프링
    implementation ('org.springframework:spring-context:6.2.7')
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation 'org.springframework:spring-webmvc:6.1.14'
    implementation 'javax.inject:javax.inject:1'

    //el과 jstl 사용시 필요한 모듈
    compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    implementation 'javax.servlet:jstl:1.2'

    // Logging- 최근에 log4j(보안이슈-거의 사용 안함 -> logback - log4j2(실패)
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.13'
    implementation 'org.slf4j:slf4j-api:2.0.3'

    // xml내 한글 처리
    implementation 'xerces:xercesImpl:2.12.2'

    //lombok - 보일러플레이트 코드 -  getter/setter/기본생성자
    //필요하긴한데 코드가 너무 지루한 기본코드들을 어노테이션으로 해결한다
    //개발자를 편하게 해주기 위해 개발한 라이브러리
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    //Restful api 서버 구축에 필요한 라이브러리
    //Java객체를 JSON으로 전환하는 일을 담당한다
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.2'

    //mybatis
    implementation 'org.springframework:spring-jdbc:5.3.37'
    implementation 'org.mybatis:mybatis:3.5.10'
    implementation 'org.mybatis:mybatis-spring:2.0.7'

    // MySQL
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    // 히카리 디비커넥션풀
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.1.0'

    // redis
    implementation 'org.springframework.data:spring-data-redis:3.2.3'
    implementation 'io.lettuce:lettuce-core:6.3.1.Final'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // AOP
    implementation 'org.aspectj:aspectjrt:1.9.20'
    implementation 'org.aspectj:aspectjweaver:1.9.20'

    // security
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-crypto:${springSecurityVersion}")

    // validation
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // jwt 토큰 기반 인증용
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // 이메일 전송
    implementation 'org.springframework:spring-context-support:6.1.6'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // 테스트
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}